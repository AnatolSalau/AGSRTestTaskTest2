version: '3.8'

services:

  authorizationserver:
    container_name: authorizationserver
    build:
      context: .
      dockerfile: authorization_server.dockerfile
    ports:
      - "8082:8082"
      - "8092:8092"
    environment:
      spring.datasource.url: "jdbc:postgresql://db:5432/postgres"
      spring.datasource.username: "postgres"
      spring.datasource.password: "postgres"
    networks:
      - test-db
    depends_on:
      - db

  resourceserver:
    container_name: resourceserver
    build:
      context: .
      dockerfile: resource_server.dockerfile
    ports:
      - "8083:8083"
      - "8093:8093"
    environment:
      spring.datasource.url: "jdbc:postgresql://db:5432/postgres"
      spring.datasource.username: "postgres"
      spring.datasource.password: "postgres"
      spring.security.oauth2.resourceserver.jwt.issuer-uri: "http://authorizationserver:8082"
      spring.security.oauth2.resourceserver.jwt.jwk-set-uri: "http://authorizationserver:8082/oauth2/jwks"
    networks:
      - test-db
    depends_on:
      - db
      - authorizationserver

  db:
    container_name: dbcontainer
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    networks:
      - test-db

networks:
  test-db:

